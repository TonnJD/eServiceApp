{"version":3,"sources":["./src/app/page/job/jobdetail/jobrespons/jobrespons.page.html","./src/app/page/job/jobdetail/jobrespons/jobrespons.module.ts","./src/app/page/job/jobdetail/jobrespons/jobrespons.page.scss","./src/app/page/job/jobdetail/jobrespons/jobrespons.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0TAA0T,wC;;;;;;;;;;;;;;;;;;;;;;ACAjR;AACM;AACF;AACU;AAEV;AAEM;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAWF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAThC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBjC,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;ACAb;AAC+B;AACd;AACH;AACU;AAO1E;IA8BE,wBAAmB,eAAgC,EACzC,eAAgC,EAChC,KAAqB,EACrB,eAAgC,EACjC,OAAsB,EAC7B,SAAuB;QALzB,iBAoBC;QApBkB,oBAAe,GAAf,eAAe,CAAiB;QACzC,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,oBAAe,GAAf,eAAe,CAAiB;QACjC,YAAO,GAAP,OAAO,CAAe;QAzB/B,cAAS,GAAG,EAAE,CAAC;QACf,cAAS,GAAG,EAAE,CAAC;QAIf,UAAK,GAAG,KAAK,CAAC;QAKd,aAAQ,GAAG,EAAE,CAAC;QAiBV,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YACrC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACvC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7B,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7B,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC/B,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACrC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7B,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,KAAI,CAAC,GAAG,GAAG,SAAS,CAAC,8BAA8B,CAAC,KAAI,CAAC,eAAe,CAAC,aAAa,GAAG,wBAAwB,GAAG,UAAU,GAAG,KAAI,CAAC,MAAM,GAAG,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,CAAC;QACzK,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR;IAEA,CAAC;;gBAxBmC,8DAAe;gBACxB,kEAAe;gBACzB,8DAAc;gBACJ,8DAAe;gBACxB,4DAAa;gBAClB,sEAAY;;IAnCd,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,yKAAqC;;SAEtC,CAAC;+EA+BoC,8DAAe;YACxB,kEAAe;YACzB,8DAAc;YACJ,8DAAe;YACxB,4DAAa;YAClB,sEAAY;OAnCd,cAAc,CAuD1B;IAAD,qBAAC;CAAA;AAvD0B","file":"page-job-jobdetail-jobrespons-jobrespons-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n      <ion-title>รายละเอียดงานและการตอบรับงาน</ion-title>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <iframe [src]=\\\"url\\\" style=\\\"width:100%;height:100%\\\"></iframe>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { JobresponsPage } from './jobrespons.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobresponsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [JobresponsPage]\n})\nexport class JobresponsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Uvam9iL2pvYmRldGFpbC9qb2JyZXNwb25zL2pvYnJlc3BvbnMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, ModalController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { PostDataService } from '../../../../post-data.service';\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'app-jobrespons',\n  templateUrl: './jobrespons.page.html',\n  styleUrls: ['./jobrespons.page.scss'],\n})\nexport class JobresponsPage implements OnInit {\n  insID;\n  empID;\n  planID;\n  SkuID;\n  SpareID;\n  SpareList;\n  SpareImage;\n  SpareData;\n  DataSpare = [];\n  ListSpare = [];\n  Amount;\n  data;\n  buttonColor;\n  check = false;\n  type;\n  item;\n  date;\n  ItemsName;\n  itemname = [];\n  cusID;\n  SpareJob;\n  JobID;\n  MainSKUID;\n  Type;\n  ListJob ;\n  DetailJobList;\n  No;\n \n  url: SafeResourceUrl;\n  constructor(public modalController: ModalController,\n    private postDataService: PostDataService,\n    private route: ActivatedRoute,\n    private alertController: AlertController,\n    public navCtrl: NavController,\n    sanitizer: DomSanitizer,) {\n      this.buttonColor = 'medium';\n    this.route.queryParams.subscribe(params => {\n      this.data = JSON.parse(params[\"data\"]);\n      this.insID = this.data.insID;\n      this.empID = this.data.empID;\n      this.planID = this.data.planID;\n      this.item = this.data.item;\n      this.type = this.data.type;\n      this.date = this.data.date;\n      this.ItemsName = this.data.ItemsName;\n      this.cusID = this.item.cusID;\n      this.Type = this.data.Type;      \n      this.url = sanitizer.bypassSecurityTrustResourceUrl(this.postDataService.apiServer_url + 'Web/TabletRespone.aspx' + '?planID=' + this.planID + \"&empId=\" + this.empID); \n    });       \n  }\n\n  ngOnInit() {\n    \n  } \n}"],"sourceRoot":""}